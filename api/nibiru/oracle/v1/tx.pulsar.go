// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package oraclev1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgAggregateExchangeRatePrevote           protoreflect.MessageDescriptor
	fd_MsgAggregateExchangeRatePrevote_hash      protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRatePrevote_feeder    protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRatePrevote_validator protoreflect.FieldDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgAggregateExchangeRatePrevote = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgAggregateExchangeRatePrevote")
	fd_MsgAggregateExchangeRatePrevote_hash = md_MsgAggregateExchangeRatePrevote.Fields().ByName("hash")
	fd_MsgAggregateExchangeRatePrevote_feeder = md_MsgAggregateExchangeRatePrevote.Fields().ByName("feeder")
	fd_MsgAggregateExchangeRatePrevote_validator = md_MsgAggregateExchangeRatePrevote.Fields().ByName("validator")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRatePrevote)(nil)

type fastReflection_MsgAggregateExchangeRatePrevote MsgAggregateExchangeRatePrevote

func (x *MsgAggregateExchangeRatePrevote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevote)(x)
}

func (x *MsgAggregateExchangeRatePrevote) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRatePrevote_messageType fastReflection_MsgAggregateExchangeRatePrevote_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRatePrevote_messageType{}

type fastReflection_MsgAggregateExchangeRatePrevote_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevote)(nil)
}
func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevote)
}
func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRatePrevote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRatePrevote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_MsgAggregateExchangeRatePrevote_hash, value) {
			return
		}
	}
	if x.Feeder != "" {
		value := protoreflect.ValueOfString(x.Feeder)
		if !f(fd_MsgAggregateExchangeRatePrevote_feeder, value) {
			return
		}
	}
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_MsgAggregateExchangeRatePrevote_validator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		return x.Hash != ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		return x.Feeder != ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		return x.Validator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		x.Hash = ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		x.Feeder = ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		x.Validator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		value := x.Feeder
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		x.Hash = value.Interface().(string)
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		x.Feeder = value.Interface().(string)
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		x.Validator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		panic(fmt.Errorf("field hash of message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote is not mutable"))
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		panic(fmt.Errorf("field feeder of message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote is not mutable"))
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		panic(fmt.Errorf("field validator of message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.hash":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.feeder":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgAggregateExchangeRatePrevote.validator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgAggregateExchangeRatePrevote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Feeder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Feeder) > 0 {
			i -= len(x.Feeder)
			copy(dAtA[i:], x.Feeder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Feeder)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Feeder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRatePrevoteResponse protoreflect.MessageDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgAggregateExchangeRatePrevoteResponse = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgAggregateExchangeRatePrevoteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(nil)

type fastReflection_MsgAggregateExchangeRatePrevoteResponse MsgAggregateExchangeRatePrevoteResponse

func (x *MsgAggregateExchangeRatePrevoteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(x)
}

func (x *MsgAggregateExchangeRatePrevoteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType{}

type fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(nil)
}
func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevoteResponse)
}
func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevoteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevoteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevoteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRatePrevoteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevoteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRateVote                protoreflect.MessageDescriptor
	fd_MsgAggregateExchangeRateVote_salt           protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_exchange_rates protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_feeder         protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_validator      protoreflect.FieldDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgAggregateExchangeRateVote = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgAggregateExchangeRateVote")
	fd_MsgAggregateExchangeRateVote_salt = md_MsgAggregateExchangeRateVote.Fields().ByName("salt")
	fd_MsgAggregateExchangeRateVote_exchange_rates = md_MsgAggregateExchangeRateVote.Fields().ByName("exchange_rates")
	fd_MsgAggregateExchangeRateVote_feeder = md_MsgAggregateExchangeRateVote.Fields().ByName("feeder")
	fd_MsgAggregateExchangeRateVote_validator = md_MsgAggregateExchangeRateVote.Fields().ByName("validator")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRateVote)(nil)

type fastReflection_MsgAggregateExchangeRateVote MsgAggregateExchangeRateVote

func (x *MsgAggregateExchangeRateVote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVote)(x)
}

func (x *MsgAggregateExchangeRateVote) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRateVote_messageType fastReflection_MsgAggregateExchangeRateVote_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRateVote_messageType{}

type fastReflection_MsgAggregateExchangeRateVote_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRateVote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVote)(nil)
}
func (x fastReflection_MsgAggregateExchangeRateVote_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVote)
}
func (x fastReflection_MsgAggregateExchangeRateVote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRateVote) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRateVote) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRateVote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRateVote) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRateVote) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRateVote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRateVote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Salt != "" {
		value := protoreflect.ValueOfString(x.Salt)
		if !f(fd_MsgAggregateExchangeRateVote_salt, value) {
			return
		}
	}
	if x.ExchangeRates != "" {
		value := protoreflect.ValueOfString(x.ExchangeRates)
		if !f(fd_MsgAggregateExchangeRateVote_exchange_rates, value) {
			return
		}
	}
	if x.Feeder != "" {
		value := protoreflect.ValueOfString(x.Feeder)
		if !f(fd_MsgAggregateExchangeRateVote_feeder, value) {
			return
		}
	}
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_MsgAggregateExchangeRateVote_validator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRateVote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		return x.Salt != ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		return x.ExchangeRates != ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		return x.Feeder != ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		return x.Validator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		x.Salt = ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		x.ExchangeRates = ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		x.Feeder = ""
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		x.Validator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRateVote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		value := x.Salt
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		value := x.ExchangeRates
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		value := x.Feeder
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		x.Salt = value.Interface().(string)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		x.ExchangeRates = value.Interface().(string)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		x.Feeder = value.Interface().(string)
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		x.Validator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		panic(fmt.Errorf("field salt of message nibiru.oracle.v1.MsgAggregateExchangeRateVote is not mutable"))
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		panic(fmt.Errorf("field exchange_rates of message nibiru.oracle.v1.MsgAggregateExchangeRateVote is not mutable"))
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		panic(fmt.Errorf("field feeder of message nibiru.oracle.v1.MsgAggregateExchangeRateVote is not mutable"))
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		panic(fmt.Errorf("field validator of message nibiru.oracle.v1.MsgAggregateExchangeRateVote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRateVote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.salt":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.exchange_rates":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.feeder":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgAggregateExchangeRateVote.validator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRateVote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgAggregateExchangeRateVote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRateVote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRateVote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRateVote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Salt)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExchangeRates)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Feeder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Feeder) > 0 {
			i -= len(x.Feeder)
			copy(dAtA[i:], x.Feeder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Feeder)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ExchangeRates) > 0 {
			i -= len(x.ExchangeRates)
			copy(dAtA[i:], x.ExchangeRates)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExchangeRates)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Salt) > 0 {
			i -= len(x.Salt)
			copy(dAtA[i:], x.Salt)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Salt)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Salt = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExchangeRates", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExchangeRates = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Feeder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRateVoteResponse protoreflect.MessageDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgAggregateExchangeRateVoteResponse = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgAggregateExchangeRateVoteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRateVoteResponse)(nil)

type fastReflection_MsgAggregateExchangeRateVoteResponse MsgAggregateExchangeRateVoteResponse

func (x *MsgAggregateExchangeRateVoteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVoteResponse)(x)
}

func (x *MsgAggregateExchangeRateVoteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRateVoteResponse_messageType fastReflection_MsgAggregateExchangeRateVoteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRateVoteResponse_messageType{}

type fastReflection_MsgAggregateExchangeRateVoteResponse_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVoteResponse)(nil)
}
func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVoteResponse)
}
func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVoteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVoteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRateVoteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVoteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRateVoteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVoteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDelegateFeedConsent          protoreflect.MessageDescriptor
	fd_MsgDelegateFeedConsent_operator protoreflect.FieldDescriptor
	fd_MsgDelegateFeedConsent_delegate protoreflect.FieldDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgDelegateFeedConsent = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgDelegateFeedConsent")
	fd_MsgDelegateFeedConsent_operator = md_MsgDelegateFeedConsent.Fields().ByName("operator")
	fd_MsgDelegateFeedConsent_delegate = md_MsgDelegateFeedConsent.Fields().ByName("delegate")
}

var _ protoreflect.Message = (*fastReflection_MsgDelegateFeedConsent)(nil)

type fastReflection_MsgDelegateFeedConsent MsgDelegateFeedConsent

func (x *MsgDelegateFeedConsent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsent)(x)
}

func (x *MsgDelegateFeedConsent) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDelegateFeedConsent_messageType fastReflection_MsgDelegateFeedConsent_messageType
var _ protoreflect.MessageType = fastReflection_MsgDelegateFeedConsent_messageType{}

type fastReflection_MsgDelegateFeedConsent_messageType struct{}

func (x fastReflection_MsgDelegateFeedConsent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsent)(nil)
}
func (x fastReflection_MsgDelegateFeedConsent_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsent)
}
func (x fastReflection_MsgDelegateFeedConsent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDelegateFeedConsent) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDelegateFeedConsent) Type() protoreflect.MessageType {
	return _fastReflection_MsgDelegateFeedConsent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDelegateFeedConsent) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDelegateFeedConsent) Interface() protoreflect.ProtoMessage {
	return (*MsgDelegateFeedConsent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDelegateFeedConsent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Operator != "" {
		value := protoreflect.ValueOfString(x.Operator)
		if !f(fd_MsgDelegateFeedConsent_operator, value) {
			return
		}
	}
	if x.Delegate != "" {
		value := protoreflect.ValueOfString(x.Delegate)
		if !f(fd_MsgDelegateFeedConsent_delegate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDelegateFeedConsent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		return x.Operator != ""
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		return x.Delegate != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		x.Operator = ""
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		x.Delegate = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDelegateFeedConsent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		value := x.Operator
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		value := x.Delegate
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		x.Operator = value.Interface().(string)
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		x.Delegate = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		panic(fmt.Errorf("field operator of message nibiru.oracle.v1.MsgDelegateFeedConsent is not mutable"))
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		panic(fmt.Errorf("field delegate of message nibiru.oracle.v1.MsgDelegateFeedConsent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDelegateFeedConsent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.operator":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgDelegateFeedConsent.delegate":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDelegateFeedConsent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgDelegateFeedConsent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDelegateFeedConsent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDelegateFeedConsent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDelegateFeedConsent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Operator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Delegate) > 0 {
			i -= len(x.Delegate)
			copy(dAtA[i:], x.Delegate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegate)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Operator) > 0 {
			i -= len(x.Operator)
			copy(dAtA[i:], x.Operator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Operator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Operator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Operator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDelegateFeedConsentResponse protoreflect.MessageDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgDelegateFeedConsentResponse = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgDelegateFeedConsentResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDelegateFeedConsentResponse)(nil)

type fastReflection_MsgDelegateFeedConsentResponse MsgDelegateFeedConsentResponse

func (x *MsgDelegateFeedConsentResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsentResponse)(x)
}

func (x *MsgDelegateFeedConsentResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDelegateFeedConsentResponse_messageType fastReflection_MsgDelegateFeedConsentResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDelegateFeedConsentResponse_messageType{}

type fastReflection_MsgDelegateFeedConsentResponse_messageType struct{}

func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsentResponse)(nil)
}
func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsentResponse)
}
func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsentResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsentResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDelegateFeedConsentResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsentResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDelegateFeedConsentResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDelegateFeedConsentResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgDelegateFeedConsentResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDelegateFeedConsentResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDelegateFeedConsentResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDelegateFeedConsentResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsentResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEditOracleParams        protoreflect.MessageDescriptor
	fd_MsgEditOracleParams_sender protoreflect.FieldDescriptor
	fd_MsgEditOracleParams_params protoreflect.FieldDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgEditOracleParams = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgEditOracleParams")
	fd_MsgEditOracleParams_sender = md_MsgEditOracleParams.Fields().ByName("sender")
	fd_MsgEditOracleParams_params = md_MsgEditOracleParams.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_MsgEditOracleParams)(nil)

type fastReflection_MsgEditOracleParams MsgEditOracleParams

func (x *MsgEditOracleParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditOracleParams)(x)
}

func (x *MsgEditOracleParams) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditOracleParams_messageType fastReflection_MsgEditOracleParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditOracleParams_messageType{}

type fastReflection_MsgEditOracleParams_messageType struct{}

func (x fastReflection_MsgEditOracleParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditOracleParams)(nil)
}
func (x fastReflection_MsgEditOracleParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditOracleParams)
}
func (x fastReflection_MsgEditOracleParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditOracleParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditOracleParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditOracleParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditOracleParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditOracleParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditOracleParams) New() protoreflect.Message {
	return new(fastReflection_MsgEditOracleParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditOracleParams) Interface() protoreflect.ProtoMessage {
	return (*MsgEditOracleParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditOracleParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgEditOracleParams_sender, value) {
			return
		}
	}
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_MsgEditOracleParams_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditOracleParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		return x.Sender != ""
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		x.Sender = ""
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditOracleParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		x.Sender = value.Interface().(string)
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		x.Params = value.Message().Interface().(*OracleParamsMsg)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		if x.Params == nil {
			x.Params = new(OracleParamsMsg)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		panic(fmt.Errorf("field sender of message nibiru.oracle.v1.MsgEditOracleParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditOracleParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.MsgEditOracleParams.sender":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.MsgEditOracleParams.params":
		m := new(OracleParamsMsg)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParams"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditOracleParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgEditOracleParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditOracleParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditOracleParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditOracleParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditOracleParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditOracleParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditOracleParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditOracleParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditOracleParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &OracleParamsMsg{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEditOracleParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_MsgEditOracleParamsResponse = File_nibiru_oracle_v1_tx_proto.Messages().ByName("MsgEditOracleParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgEditOracleParamsResponse)(nil)

type fastReflection_MsgEditOracleParamsResponse MsgEditOracleParamsResponse

func (x *MsgEditOracleParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEditOracleParamsResponse)(x)
}

func (x *MsgEditOracleParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEditOracleParamsResponse_messageType fastReflection_MsgEditOracleParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgEditOracleParamsResponse_messageType{}

type fastReflection_MsgEditOracleParamsResponse_messageType struct{}

func (x fastReflection_MsgEditOracleParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEditOracleParamsResponse)(nil)
}
func (x fastReflection_MsgEditOracleParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEditOracleParamsResponse)
}
func (x fastReflection_MsgEditOracleParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditOracleParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEditOracleParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEditOracleParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEditOracleParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgEditOracleParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEditOracleParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgEditOracleParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEditOracleParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgEditOracleParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEditOracleParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEditOracleParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEditOracleParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEditOracleParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.MsgEditOracleParamsResponse"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.MsgEditOracleParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEditOracleParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.MsgEditOracleParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEditOracleParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEditOracleParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEditOracleParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEditOracleParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEditOracleParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditOracleParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEditOracleParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditOracleParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEditOracleParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_OracleParamsMsg_4_list)(nil)

type _OracleParamsMsg_4_list struct {
	list *[]string
}

func (x *_OracleParamsMsg_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_OracleParamsMsg_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_OracleParamsMsg_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_OracleParamsMsg_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_OracleParamsMsg_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message OracleParamsMsg at list field Whitelist as it is not of Message kind"))
}

func (x *_OracleParamsMsg_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_OracleParamsMsg_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_OracleParamsMsg_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_OracleParamsMsg                      protoreflect.MessageDescriptor
	fd_OracleParamsMsg_vote_period          protoreflect.FieldDescriptor
	fd_OracleParamsMsg_vote_threshold       protoreflect.FieldDescriptor
	fd_OracleParamsMsg_reward_band          protoreflect.FieldDescriptor
	fd_OracleParamsMsg_whitelist            protoreflect.FieldDescriptor
	fd_OracleParamsMsg_slash_fraction       protoreflect.FieldDescriptor
	fd_OracleParamsMsg_slash_window         protoreflect.FieldDescriptor
	fd_OracleParamsMsg_min_valid_per_window protoreflect.FieldDescriptor
	fd_OracleParamsMsg_twap_lookback_window protoreflect.FieldDescriptor
	fd_OracleParamsMsg_min_voters           protoreflect.FieldDescriptor
	fd_OracleParamsMsg_validator_fee_ratio  protoreflect.FieldDescriptor
	fd_OracleParamsMsg_expiration_blocks    protoreflect.FieldDescriptor
)

func init() {
	file_nibiru_oracle_v1_tx_proto_init()
	md_OracleParamsMsg = File_nibiru_oracle_v1_tx_proto.Messages().ByName("OracleParamsMsg")
	fd_OracleParamsMsg_vote_period = md_OracleParamsMsg.Fields().ByName("vote_period")
	fd_OracleParamsMsg_vote_threshold = md_OracleParamsMsg.Fields().ByName("vote_threshold")
	fd_OracleParamsMsg_reward_band = md_OracleParamsMsg.Fields().ByName("reward_band")
	fd_OracleParamsMsg_whitelist = md_OracleParamsMsg.Fields().ByName("whitelist")
	fd_OracleParamsMsg_slash_fraction = md_OracleParamsMsg.Fields().ByName("slash_fraction")
	fd_OracleParamsMsg_slash_window = md_OracleParamsMsg.Fields().ByName("slash_window")
	fd_OracleParamsMsg_min_valid_per_window = md_OracleParamsMsg.Fields().ByName("min_valid_per_window")
	fd_OracleParamsMsg_twap_lookback_window = md_OracleParamsMsg.Fields().ByName("twap_lookback_window")
	fd_OracleParamsMsg_min_voters = md_OracleParamsMsg.Fields().ByName("min_voters")
	fd_OracleParamsMsg_validator_fee_ratio = md_OracleParamsMsg.Fields().ByName("validator_fee_ratio")
	fd_OracleParamsMsg_expiration_blocks = md_OracleParamsMsg.Fields().ByName("expiration_blocks")
}

var _ protoreflect.Message = (*fastReflection_OracleParamsMsg)(nil)

type fastReflection_OracleParamsMsg OracleParamsMsg

func (x *OracleParamsMsg) ProtoReflect() protoreflect.Message {
	return (*fastReflection_OracleParamsMsg)(x)
}

func (x *OracleParamsMsg) slowProtoReflect() protoreflect.Message {
	mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_OracleParamsMsg_messageType fastReflection_OracleParamsMsg_messageType
var _ protoreflect.MessageType = fastReflection_OracleParamsMsg_messageType{}

type fastReflection_OracleParamsMsg_messageType struct{}

func (x fastReflection_OracleParamsMsg_messageType) Zero() protoreflect.Message {
	return (*fastReflection_OracleParamsMsg)(nil)
}
func (x fastReflection_OracleParamsMsg_messageType) New() protoreflect.Message {
	return new(fastReflection_OracleParamsMsg)
}
func (x fastReflection_OracleParamsMsg_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_OracleParamsMsg
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_OracleParamsMsg) Descriptor() protoreflect.MessageDescriptor {
	return md_OracleParamsMsg
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_OracleParamsMsg) Type() protoreflect.MessageType {
	return _fastReflection_OracleParamsMsg_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_OracleParamsMsg) New() protoreflect.Message {
	return new(fastReflection_OracleParamsMsg)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_OracleParamsMsg) Interface() protoreflect.ProtoMessage {
	return (*OracleParamsMsg)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_OracleParamsMsg) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.VotePeriod != uint64(0) {
		value := protoreflect.ValueOfUint64(x.VotePeriod)
		if !f(fd_OracleParamsMsg_vote_period, value) {
			return
		}
	}
	if x.VoteThreshold != "" {
		value := protoreflect.ValueOfString(x.VoteThreshold)
		if !f(fd_OracleParamsMsg_vote_threshold, value) {
			return
		}
	}
	if x.RewardBand != "" {
		value := protoreflect.ValueOfString(x.RewardBand)
		if !f(fd_OracleParamsMsg_reward_band, value) {
			return
		}
	}
	if len(x.Whitelist) != 0 {
		value := protoreflect.ValueOfList(&_OracleParamsMsg_4_list{list: &x.Whitelist})
		if !f(fd_OracleParamsMsg_whitelist, value) {
			return
		}
	}
	if x.SlashFraction != "" {
		value := protoreflect.ValueOfString(x.SlashFraction)
		if !f(fd_OracleParamsMsg_slash_fraction, value) {
			return
		}
	}
	if x.SlashWindow != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SlashWindow)
		if !f(fd_OracleParamsMsg_slash_window, value) {
			return
		}
	}
	if x.MinValidPerWindow != "" {
		value := protoreflect.ValueOfString(x.MinValidPerWindow)
		if !f(fd_OracleParamsMsg_min_valid_per_window, value) {
			return
		}
	}
	if x.TwapLookbackWindow != nil {
		value := protoreflect.ValueOfMessage(x.TwapLookbackWindow.ProtoReflect())
		if !f(fd_OracleParamsMsg_twap_lookback_window, value) {
			return
		}
	}
	if x.MinVoters != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MinVoters)
		if !f(fd_OracleParamsMsg_min_voters, value) {
			return
		}
	}
	if x.ValidatorFeeRatio != "" {
		value := protoreflect.ValueOfString(x.ValidatorFeeRatio)
		if !f(fd_OracleParamsMsg_validator_fee_ratio, value) {
			return
		}
	}
	if x.ExpirationBlocks != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExpirationBlocks)
		if !f(fd_OracleParamsMsg_expiration_blocks, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_OracleParamsMsg) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		return x.VotePeriod != uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		return x.VoteThreshold != ""
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		return x.RewardBand != ""
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		return len(x.Whitelist) != 0
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		return x.SlashFraction != ""
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		return x.SlashWindow != uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		return x.MinValidPerWindow != ""
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		return x.TwapLookbackWindow != nil
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		return x.MinVoters != uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		return x.ValidatorFeeRatio != ""
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		return x.ExpirationBlocks != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OracleParamsMsg) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		x.VotePeriod = uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		x.VoteThreshold = ""
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		x.RewardBand = ""
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		x.Whitelist = nil
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		x.SlashFraction = ""
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		x.SlashWindow = uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		x.MinValidPerWindow = ""
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		x.TwapLookbackWindow = nil
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		x.MinVoters = uint64(0)
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		x.ValidatorFeeRatio = ""
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		x.ExpirationBlocks = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_OracleParamsMsg) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		value := x.VotePeriod
		return protoreflect.ValueOfUint64(value)
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		value := x.VoteThreshold
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		value := x.RewardBand
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		if len(x.Whitelist) == 0 {
			return protoreflect.ValueOfList(&_OracleParamsMsg_4_list{})
		}
		listValue := &_OracleParamsMsg_4_list{list: &x.Whitelist}
		return protoreflect.ValueOfList(listValue)
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		value := x.SlashFraction
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		value := x.SlashWindow
		return protoreflect.ValueOfUint64(value)
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		value := x.MinValidPerWindow
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		value := x.TwapLookbackWindow
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		value := x.MinVoters
		return protoreflect.ValueOfUint64(value)
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		value := x.ValidatorFeeRatio
		return protoreflect.ValueOfString(value)
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		value := x.ExpirationBlocks
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OracleParamsMsg) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		x.VotePeriod = value.Uint()
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		x.VoteThreshold = value.Interface().(string)
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		x.RewardBand = value.Interface().(string)
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		lv := value.List()
		clv := lv.(*_OracleParamsMsg_4_list)
		x.Whitelist = *clv.list
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		x.SlashFraction = value.Interface().(string)
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		x.SlashWindow = value.Uint()
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		x.MinValidPerWindow = value.Interface().(string)
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		x.TwapLookbackWindow = value.Message().Interface().(*durationpb.Duration)
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		x.MinVoters = value.Uint()
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		x.ValidatorFeeRatio = value.Interface().(string)
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		x.ExpirationBlocks = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OracleParamsMsg) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		if x.Whitelist == nil {
			x.Whitelist = []string{}
		}
		value := &_OracleParamsMsg_4_list{list: &x.Whitelist}
		return protoreflect.ValueOfList(value)
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		if x.TwapLookbackWindow == nil {
			x.TwapLookbackWindow = new(durationpb.Duration)
		}
		return protoreflect.ValueOfMessage(x.TwapLookbackWindow.ProtoReflect())
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		panic(fmt.Errorf("field vote_period of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		panic(fmt.Errorf("field vote_threshold of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		panic(fmt.Errorf("field reward_band of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		panic(fmt.Errorf("field slash_fraction of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		panic(fmt.Errorf("field slash_window of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		panic(fmt.Errorf("field min_valid_per_window of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		panic(fmt.Errorf("field min_voters of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		panic(fmt.Errorf("field validator_fee_ratio of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		panic(fmt.Errorf("field expiration_blocks of message nibiru.oracle.v1.OracleParamsMsg is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_OracleParamsMsg) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nibiru.oracle.v1.OracleParamsMsg.vote_period":
		return protoreflect.ValueOfUint64(uint64(0))
	case "nibiru.oracle.v1.OracleParamsMsg.vote_threshold":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.OracleParamsMsg.reward_band":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.OracleParamsMsg.whitelist":
		list := []string{}
		return protoreflect.ValueOfList(&_OracleParamsMsg_4_list{list: &list})
	case "nibiru.oracle.v1.OracleParamsMsg.slash_fraction":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.OracleParamsMsg.slash_window":
		return protoreflect.ValueOfUint64(uint64(0))
	case "nibiru.oracle.v1.OracleParamsMsg.min_valid_per_window":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window":
		m := new(durationpb.Duration)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nibiru.oracle.v1.OracleParamsMsg.min_voters":
		return protoreflect.ValueOfUint64(uint64(0))
	case "nibiru.oracle.v1.OracleParamsMsg.validator_fee_ratio":
		return protoreflect.ValueOfString("")
	case "nibiru.oracle.v1.OracleParamsMsg.expiration_blocks":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nibiru.oracle.v1.OracleParamsMsg"))
		}
		panic(fmt.Errorf("message nibiru.oracle.v1.OracleParamsMsg does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_OracleParamsMsg) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nibiru.oracle.v1.OracleParamsMsg", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_OracleParamsMsg) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_OracleParamsMsg) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_OracleParamsMsg) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_OracleParamsMsg) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*OracleParamsMsg)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.VotePeriod != 0 {
			n += 1 + runtime.Sov(uint64(x.VotePeriod))
		}
		l = len(x.VoteThreshold)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RewardBand)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Whitelist) > 0 {
			for _, s := range x.Whitelist {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.SlashFraction)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SlashWindow != 0 {
			n += 1 + runtime.Sov(uint64(x.SlashWindow))
		}
		l = len(x.MinValidPerWindow)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TwapLookbackWindow != nil {
			l = options.Size(x.TwapLookbackWindow)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MinVoters != 0 {
			n += 1 + runtime.Sov(uint64(x.MinVoters))
		}
		l = len(x.ValidatorFeeRatio)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ExpirationBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.ExpirationBlocks))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*OracleParamsMsg)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ExpirationBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExpirationBlocks))
			i--
			dAtA[i] = 0x58
		}
		if len(x.ValidatorFeeRatio) > 0 {
			i -= len(x.ValidatorFeeRatio)
			copy(dAtA[i:], x.ValidatorFeeRatio)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorFeeRatio)))
			i--
			dAtA[i] = 0x52
		}
		if x.MinVoters != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MinVoters))
			i--
			dAtA[i] = 0x48
		}
		if x.TwapLookbackWindow != nil {
			encoded, err := options.Marshal(x.TwapLookbackWindow)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.MinValidPerWindow) > 0 {
			i -= len(x.MinValidPerWindow)
			copy(dAtA[i:], x.MinValidPerWindow)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MinValidPerWindow)))
			i--
			dAtA[i] = 0x3a
		}
		if x.SlashWindow != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SlashWindow))
			i--
			dAtA[i] = 0x30
		}
		if len(x.SlashFraction) > 0 {
			i -= len(x.SlashFraction)
			copy(dAtA[i:], x.SlashFraction)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SlashFraction)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Whitelist) > 0 {
			for iNdEx := len(x.Whitelist) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Whitelist[iNdEx])
				copy(dAtA[i:], x.Whitelist[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Whitelist[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.RewardBand) > 0 {
			i -= len(x.RewardBand)
			copy(dAtA[i:], x.RewardBand)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardBand)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.VoteThreshold) > 0 {
			i -= len(x.VoteThreshold)
			copy(dAtA[i:], x.VoteThreshold)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VoteThreshold)))
			i--
			dAtA[i] = 0x12
		}
		if x.VotePeriod != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.VotePeriod))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*OracleParamsMsg)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OracleParamsMsg: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: OracleParamsMsg: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotePeriod", wireType)
				}
				x.VotePeriod = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.VotePeriod |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VoteThreshold", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VoteThreshold = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardBand", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardBand = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Whitelist", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Whitelist = append(x.Whitelist, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlashFraction", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SlashFraction = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SlashWindow", wireType)
				}
				x.SlashWindow = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SlashWindow |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinValidPerWindow", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MinValidPerWindow = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TwapLookbackWindow", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TwapLookbackWindow == nil {
					x.TwapLookbackWindow = &durationpb.Duration{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TwapLookbackWindow); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinVoters", wireType)
				}
				x.MinVoters = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MinVoters |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorFeeRatio", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorFeeRatio = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExpirationBlocks", wireType)
				}
				x.ExpirationBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExpirationBlocks |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: nibiru/oracle/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgAggregateExchangeRatePrevote represents a message to submit
// aggregate exchange rate prevote.
type MsgAggregateExchangeRatePrevote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Feeder is the Bech32 address of the price feeder. A validator may
	// specify multiple price feeders by delegating them consent. The validator
	// address is also a valid feeder by default.
	Feeder string `protobuf:"bytes,2,opt,name=feeder,proto3" json:"feeder,omitempty"`
	// Validator is the Bech32 address to which the prevote will be credited.
	Validator string `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *MsgAggregateExchangeRatePrevote) Reset() {
	*x = MsgAggregateExchangeRatePrevote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRatePrevote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRatePrevote) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRatePrevote.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRatePrevote) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgAggregateExchangeRatePrevote) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MsgAggregateExchangeRatePrevote) GetFeeder() string {
	if x != nil {
		return x.Feeder
	}
	return ""
}

func (x *MsgAggregateExchangeRatePrevote) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

// MsgAggregateExchangeRatePrevoteResponse defines the
// Msg/AggregateExchangeRatePrevote response type.
type MsgAggregateExchangeRatePrevoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAggregateExchangeRatePrevoteResponse) Reset() {
	*x = MsgAggregateExchangeRatePrevoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRatePrevoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRatePrevoteResponse) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRatePrevoteResponse.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRatePrevoteResponse) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{1}
}

// MsgAggregateExchangeRateVote represents a message to submit
// aggregate exchange rate vote.
type MsgAggregateExchangeRateVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt          string `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	ExchangeRates string `protobuf:"bytes,2,opt,name=exchange_rates,json=exchangeRates,proto3" json:"exchange_rates,omitempty"`
	// Feeder is the Bech32 address of the price feeder. A validator may
	// specify multiple price feeders by delegating them consent. The validator
	// address is also a valid feeder by default.
	Feeder string `protobuf:"bytes,3,opt,name=feeder,proto3" json:"feeder,omitempty"`
	// Validator is the Bech32 address to which the vote will be credited.
	Validator string `protobuf:"bytes,4,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *MsgAggregateExchangeRateVote) Reset() {
	*x = MsgAggregateExchangeRateVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRateVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRateVote) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRateVote.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRateVote) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgAggregateExchangeRateVote) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetExchangeRates() string {
	if x != nil {
		return x.ExchangeRates
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetFeeder() string {
	if x != nil {
		return x.Feeder
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

// MsgAggregateExchangeRateVoteResponse defines the
// Msg/AggregateExchangeRateVote response type.
type MsgAggregateExchangeRateVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAggregateExchangeRateVoteResponse) Reset() {
	*x = MsgAggregateExchangeRateVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRateVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRateVoteResponse) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRateVoteResponse.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRateVoteResponse) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{3}
}

// MsgDelegateFeedConsent represents a message to delegate oracle voting rights
// to another address.
type MsgDelegateFeedConsent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Delegate string `protobuf:"bytes,2,opt,name=delegate,proto3" json:"delegate,omitempty"`
}

func (x *MsgDelegateFeedConsent) Reset() {
	*x = MsgDelegateFeedConsent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegateFeedConsent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegateFeedConsent) ProtoMessage() {}

// Deprecated: Use MsgDelegateFeedConsent.ProtoReflect.Descriptor instead.
func (*MsgDelegateFeedConsent) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDelegateFeedConsent) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *MsgDelegateFeedConsent) GetDelegate() string {
	if x != nil {
		return x.Delegate
	}
	return ""
}

// MsgDelegateFeedConsentResponse defines the Msg/DelegateFeedConsent response
// type.
type MsgDelegateFeedConsentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDelegateFeedConsentResponse) Reset() {
	*x = MsgDelegateFeedConsentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegateFeedConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegateFeedConsentResponse) ProtoMessage() {}

// Deprecated: Use MsgDelegateFeedConsentResponse.ProtoReflect.Descriptor instead.
func (*MsgDelegateFeedConsentResponse) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{5}
}

type MsgEditOracleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender string           `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Params *OracleParamsMsg `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MsgEditOracleParams) Reset() {
	*x = MsgEditOracleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditOracleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditOracleParams) ProtoMessage() {}

// Deprecated: Use MsgEditOracleParams.ProtoReflect.Descriptor instead.
func (*MsgEditOracleParams) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgEditOracleParams) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgEditOracleParams) GetParams() *OracleParamsMsg {
	if x != nil {
		return x.Params
	}
	return nil
}

type MsgEditOracleParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgEditOracleParamsResponse) Reset() {
	*x = MsgEditOracleParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEditOracleParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEditOracleParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgEditOracleParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgEditOracleParamsResponse) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{7}
}

type OracleParamsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// VotePeriod defines the number of blocks during which voting takes place.
	VotePeriod uint64 `protobuf:"varint,1,opt,name=vote_period,json=votePeriod,proto3" json:"vote_period,omitempty"`
	// VoteThreshold specifies the minimum proportion of votes that must be
	// received for a ballot to pass.
	VoteThreshold string `protobuf:"bytes,2,opt,name=vote_threshold,json=voteThreshold,proto3" json:"vote_threshold,omitempty"`
	// RewardBand defines a maxium divergence that a price vote can have from the
	// weighted median in the ballot. If a vote lies within the valid range
	// defined by:
	//
	//	μ := weightedMedian,
	//	validRange := μ ± (μ * rewardBand / 2),
	//
	// then rewards are added to the validator performance.
	// Note that if the reward band is smaller than 1 standard
	// deviation, the band is taken to be 1 standard deviation.a price
	RewardBand string `protobuf:"bytes,3,opt,name=reward_band,json=rewardBand,proto3" json:"reward_band,omitempty"`
	// The set of whitelisted markets, or asset pairs, for the module.
	// Ex. '["unibi:uusd","ubtc:uusd"]'
	Whitelist []string `protobuf:"bytes,4,rep,name=whitelist,proto3" json:"whitelist,omitempty"`
	// SlashFraction returns the proportion of an oracle's stake that gets
	// slashed in the event of slashing. `SlashFraction` specifies the exact
	// penalty for failing a voting period.
	SlashFraction string `protobuf:"bytes,5,opt,name=slash_fraction,json=slashFraction,proto3" json:"slash_fraction,omitempty"`
	// SlashWindow returns the number of voting periods that specify a
	// "slash window". After each slash window, all oracles that have missed more
	// than the penalty threshold are slashed. Missing the penalty threshold is
	// synonymous with submitting fewer valid votes than `MinValidPerWindow`.
	SlashWindow       uint64 `protobuf:"varint,6,opt,name=slash_window,json=slashWindow,proto3" json:"slash_window,omitempty"`
	MinValidPerWindow string `protobuf:"bytes,7,opt,name=min_valid_per_window,json=minValidPerWindow,proto3" json:"min_valid_per_window,omitempty"`
	// Amount of time to look back for TWAP calculations
	TwapLookbackWindow *durationpb.Duration `protobuf:"bytes,8,opt,name=twap_lookback_window,json=twapLookbackWindow,proto3" json:"twap_lookback_window,omitempty"`
	// The minimum number of voters (i.e. oracle validators) per pair for it to be
	// considered a passing ballot. Recommended at least 4.
	MinVoters uint64 `protobuf:"varint,9,opt,name=min_voters,json=minVoters,proto3" json:"min_voters,omitempty"`
	// The validator fee ratio that is given to validators every epoch.
	ValidatorFeeRatio string `protobuf:"bytes,10,opt,name=validator_fee_ratio,json=validatorFeeRatio,proto3" json:"validator_fee_ratio,omitempty"`
	ExpirationBlocks  uint64 `protobuf:"varint,11,opt,name=expiration_blocks,json=expirationBlocks,proto3" json:"expiration_blocks,omitempty"`
}

func (x *OracleParamsMsg) Reset() {
	*x = OracleParamsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nibiru_oracle_v1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OracleParamsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleParamsMsg) ProtoMessage() {}

// Deprecated: Use OracleParamsMsg.ProtoReflect.Descriptor instead.
func (*OracleParamsMsg) Descriptor() ([]byte, []int) {
	return file_nibiru_oracle_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *OracleParamsMsg) GetVotePeriod() uint64 {
	if x != nil {
		return x.VotePeriod
	}
	return 0
}

func (x *OracleParamsMsg) GetVoteThreshold() string {
	if x != nil {
		return x.VoteThreshold
	}
	return ""
}

func (x *OracleParamsMsg) GetRewardBand() string {
	if x != nil {
		return x.RewardBand
	}
	return ""
}

func (x *OracleParamsMsg) GetWhitelist() []string {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

func (x *OracleParamsMsg) GetSlashFraction() string {
	if x != nil {
		return x.SlashFraction
	}
	return ""
}

func (x *OracleParamsMsg) GetSlashWindow() uint64 {
	if x != nil {
		return x.SlashWindow
	}
	return 0
}

func (x *OracleParamsMsg) GetMinValidPerWindow() string {
	if x != nil {
		return x.MinValidPerWindow
	}
	return ""
}

func (x *OracleParamsMsg) GetTwapLookbackWindow() *durationpb.Duration {
	if x != nil {
		return x.TwapLookbackWindow
	}
	return nil
}

func (x *OracleParamsMsg) GetMinVoters() uint64 {
	if x != nil {
		return x.MinVoters
	}
	return 0
}

func (x *OracleParamsMsg) GetValidatorFeeRatio() string {
	if x != nil {
		return x.ValidatorFeeRatio
	}
	return ""
}

func (x *OracleParamsMsg) GetExpirationBlocks() uint64 {
	if x != nil {
		return x.ExpirationBlocks
	}
	return 0
}

var File_nibiru_oracle_v1_tx_proto protoreflect.FileDescriptor

var file_nibiru_oracle_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e, 0x69, 0x62,
	0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xaf, 0x01, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x76, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xf2, 0xde, 0x1f, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x68, 0x61,
	0x73, 0x68, 0x22, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x65, 0x65,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0,
	0x1f, 0x00, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee, 0x01,
	0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xf2, 0xde,
	0x1f, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xf2, 0xde, 0x1f,
	0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x14, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x26,
	0x0a, 0x24, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x13, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x22, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x20, 0x0a,
	0x1e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x4c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x4d, 0x73, 0x67, 0x42, 0x11, 0xf2, 0xde, 0x1f, 0x0d, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73,
	0x67, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xef, 0x08, 0x0a, 0x0f, 0x4f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a,
	0x0b, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x1a, 0xc8, 0xde, 0x1f, 0x01, 0xf2, 0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x52, 0x0a,
	0x76, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x6e, 0x0a, 0x0e, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x47, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x63, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x52, 0x0d, 0x76, 0x6f, 0x74,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x65, 0x0a, 0x0b, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x44, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0xf2,
	0xde, 0x1f, 0x12, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e,
	0x64, 0x12, 0x6e, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x50, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x34, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x2f, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x76, 0x32, 0x2f, 0x78,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x61,
	0x69, 0x72, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x6e, 0x0a, 0x0e, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x47, 0xc8, 0xde, 0x1f, 0x01, 0xda,
	0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0xf2, 0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0d, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x42, 0x1b, 0xc8, 0xde, 0x1f, 0x01, 0xf2, 0xde, 0x1f,
	0x13, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x22, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x7e, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x4d, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x63, 0xf2,
	0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x52, 0x11,
	0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x96, 0x01, 0x0a, 0x14, 0x74, 0x77, 0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x49, 0xc8, 0xde, 0x1f,
	0x01, 0xea, 0xde, 0x1f, 0x1e, 0x74, 0x77, 0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x77, 0x61,
	0x70, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x22, 0x98, 0xdf, 0x1f, 0x01, 0x52, 0x12, 0x74, 0x77, 0x61, 0x70, 0x4c, 0x6f, 0x6f, 0x6b,
	0x62, 0x61, 0x63, 0x6b, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x42, 0x19,
	0xc8, 0xde, 0x1f, 0x01, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69,
	0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x22, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x7c, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x4c, 0xc8, 0xde, 0x1f, 0x01, 0xda, 0xde, 0x1f, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x63, 0xf2, 0xde, 0x1f, 0x1a, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x52,
	0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x4d, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x42, 0x20, 0xc8,
	0xde, 0x1f, 0x01, 0xf2, 0xde, 0x1f, 0x18, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x52,
	0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x3a, 0x08, 0x98, 0xa0, 0x1f, 0x01, 0xe8, 0xa0, 0x1f, 0x01, 0x32, 0xfd, 0x04, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0xac, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x76, 0x6f, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x1a, 0x39, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x16, 0x2f, 0x6e, 0x69, 0x62,
	0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x6f,
	0x74, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x2e, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x1a, 0x36, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x22, 0x13, 0x2f, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2f, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e,
	0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x20, 0x22, 0x1e, 0x2f, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x2d, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69,
	0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2d, 0x2e,
	0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0xad, 0x01, 0x0a, 0x14,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x3b, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x4f,
	0x58, 0xaa, 0x02, 0x10, 0x4e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x4e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x5c, 0x4f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x4e, 0x69, 0x62, 0x69, 0x72, 0x75,
	0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x4e, 0x69, 0x62, 0x69, 0x72, 0x75, 0x3a,
	0x3a, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_nibiru_oracle_v1_tx_proto_rawDescOnce sync.Once
	file_nibiru_oracle_v1_tx_proto_rawDescData = file_nibiru_oracle_v1_tx_proto_rawDesc
)

func file_nibiru_oracle_v1_tx_proto_rawDescGZIP() []byte {
	file_nibiru_oracle_v1_tx_proto_rawDescOnce.Do(func() {
		file_nibiru_oracle_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_nibiru_oracle_v1_tx_proto_rawDescData)
	})
	return file_nibiru_oracle_v1_tx_proto_rawDescData
}

var file_nibiru_oracle_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_nibiru_oracle_v1_tx_proto_goTypes = []interface{}{
	(*MsgAggregateExchangeRatePrevote)(nil),         // 0: nibiru.oracle.v1.MsgAggregateExchangeRatePrevote
	(*MsgAggregateExchangeRatePrevoteResponse)(nil), // 1: nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse
	(*MsgAggregateExchangeRateVote)(nil),            // 2: nibiru.oracle.v1.MsgAggregateExchangeRateVote
	(*MsgAggregateExchangeRateVoteResponse)(nil),    // 3: nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse
	(*MsgDelegateFeedConsent)(nil),                  // 4: nibiru.oracle.v1.MsgDelegateFeedConsent
	(*MsgDelegateFeedConsentResponse)(nil),          // 5: nibiru.oracle.v1.MsgDelegateFeedConsentResponse
	(*MsgEditOracleParams)(nil),                     // 6: nibiru.oracle.v1.MsgEditOracleParams
	(*MsgEditOracleParamsResponse)(nil),             // 7: nibiru.oracle.v1.MsgEditOracleParamsResponse
	(*OracleParamsMsg)(nil),                         // 8: nibiru.oracle.v1.OracleParamsMsg
	(*durationpb.Duration)(nil),                     // 9: google.protobuf.Duration
}
var file_nibiru_oracle_v1_tx_proto_depIdxs = []int32{
	8, // 0: nibiru.oracle.v1.MsgEditOracleParams.params:type_name -> nibiru.oracle.v1.OracleParamsMsg
	9, // 1: nibiru.oracle.v1.OracleParamsMsg.twap_lookback_window:type_name -> google.protobuf.Duration
	0, // 2: nibiru.oracle.v1.Msg.AggregateExchangeRatePrevote:input_type -> nibiru.oracle.v1.MsgAggregateExchangeRatePrevote
	2, // 3: nibiru.oracle.v1.Msg.AggregateExchangeRateVote:input_type -> nibiru.oracle.v1.MsgAggregateExchangeRateVote
	4, // 4: nibiru.oracle.v1.Msg.DelegateFeedConsent:input_type -> nibiru.oracle.v1.MsgDelegateFeedConsent
	6, // 5: nibiru.oracle.v1.Msg.EditOracleParams:input_type -> nibiru.oracle.v1.MsgEditOracleParams
	1, // 6: nibiru.oracle.v1.Msg.AggregateExchangeRatePrevote:output_type -> nibiru.oracle.v1.MsgAggregateExchangeRatePrevoteResponse
	3, // 7: nibiru.oracle.v1.Msg.AggregateExchangeRateVote:output_type -> nibiru.oracle.v1.MsgAggregateExchangeRateVoteResponse
	5, // 8: nibiru.oracle.v1.Msg.DelegateFeedConsent:output_type -> nibiru.oracle.v1.MsgDelegateFeedConsentResponse
	7, // 9: nibiru.oracle.v1.Msg.EditOracleParams:output_type -> nibiru.oracle.v1.MsgEditOracleParamsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_nibiru_oracle_v1_tx_proto_init() }
func file_nibiru_oracle_v1_tx_proto_init() {
	if File_nibiru_oracle_v1_tx_proto != nil {
		return
	}
	file_nibiru_oracle_v1_oracle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nibiru_oracle_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRatePrevote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRatePrevoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRateVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRateVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegateFeedConsent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegateFeedConsentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditOracleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEditOracleParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nibiru_oracle_v1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OracleParamsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nibiru_oracle_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nibiru_oracle_v1_tx_proto_goTypes,
		DependencyIndexes: file_nibiru_oracle_v1_tx_proto_depIdxs,
		MessageInfos:      file_nibiru_oracle_v1_tx_proto_msgTypes,
	}.Build()
	File_nibiru_oracle_v1_tx_proto = out.File
	file_nibiru_oracle_v1_tx_proto_rawDesc = nil
	file_nibiru_oracle_v1_tx_proto_goTypes = nil
	file_nibiru_oracle_v1_tx_proto_depIdxs = nil
}
