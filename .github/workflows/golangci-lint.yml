name: Linter

# Run on every main merge and on PRs.
on:
  push:
    branches: ["main"]
  pull_request:

# Allow concurrent runs on main/release branches but isolates other branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}

permissions:
  contents: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Check for Go-related changes"
        id: check_nibiru_go
        uses: dorny/paths-filter@v3
        with:
          filters: |
            nibiru-go:
              - "app/**.go"
              - "cmd/**.go"
              - "eth/**.go"
              - "gosdk/**.go"
              - "x/**.go"
              - "**.proto"
              - "go.mod"
              - "go.sum"
              - "contrib/docker/*"

      - uses: actions/setup-go@v5
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        with:
          go-version: 1.24
          cache: false # the golangci-lint action already caches for us (https://github.com/golangci/golangci-lint-action#performance)

      # Use GitHub actions output paramters to get go paths. For more info, see
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - name: "Set output variables for go cache"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        id: go-cache-paths
        run: |
          echo "go-build-cache=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod-cache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - name: "Go build cache"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build-cache }}
          key: go-build-cache-${{ hashFiles('**/go.sum') }}

      - name: "Go mod cache"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod-cache }}
          key: go-mod-cache-${{ hashFiles('**/go.sum') }}

      - name: golangci-lint
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.64.8

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --fix=false

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
