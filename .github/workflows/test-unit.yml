name: Unit Tests

on:
  pull_request:

# Allow concurrent runs on main/release branches but isolates other branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Check for Go-related changes"
        id: check_nibiru_go
        uses: dorny/paths-filter@v3
        with:
          filters: |
            nibiru-go:
              - "app/**/*.go"
              - "cmd/**/*.go"
              - "eth/**/*.go"
              - "gosdk/**/*.go"
              - "x/**/*.go"
              - "**/*.proto"
              - "go.mod"
              - "go.sum"
              - "contrib/docker-compose/*"

      - name: skip-tests
        if: steps.check_nibiru_go.outputs.nibiru-go == 'false'
        run: |
          echo "job: unit-tests was skipped since Nibiru Golang files were not changed."

      - name: "Set up Go"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          # cache: "The action has a built-in functionality for caching and
          # restoring go modules and build outputs. It uses [actions/cache@v4]."
          # - Handles go module cache (go env GOMODCACHE).
          # - Handles go build cache (go env GOCACHE).
          cache: true

      - name: "Install just"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        # casey/just: https://just.systems/man/en/chapter_6.html
        # taiki-e/install-action: https://github.com/taiki-e/install-action
        uses: taiki-e/install-action@just

      - name: Run all unit tests.
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: just test-unit

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Check for Go-related changes"
        id: check_nibiru_go
        uses: dorny/paths-filter@v3
        with:
          filters: |
            nibiru-go:
              - "app/**/*.go"
              - "cmd/**/*.go"
              - "eth/**/*.go"
              - "gosdk/**/*.go"
              - "x/**/*.go"
              - "**/*.proto"
              - "go.mod"
              - "go.sum"
              - "contrib/docker-compose/*"

      - name: "Set up Go"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: "Install just"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        # casey/just: https://just.systems/man/en/chapter_6.html
        # taiki-e/install-action: https://github.com/taiki-e/install-action
        uses: taiki-e/install-action@just

      - name: "Build the nibid binary"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: |
          just install

      - name: "Run scripts/chaosnet.sh (Used in Docker image)"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: |
          just test-chaosnet

      - name: "Run scripts/localnet.sh"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: |
          just test-localnet

  # proto-gen-rs: Tests the script that generates protobuf bindings in Rust
  proto-gen-rs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Check for Go-related changes"
        id: check_nibiru_go
        uses: dorny/paths-filter@v3
        with:
          filters: |
            nibiru-go:
              - "app/**/*.go"
              - "cmd/**/*.go"
              - "eth/**/*.go"
              - "gosdk/**/*.go"
              - "x/**/*.go"
              - "**/*.proto"
              - "go.mod"
              - "go.sum"
              - "contrib/docker-compose/*"

      - name: skip-tests
        if: steps.check_nibiru_go.outputs.nibiru-go == 'false'
        run: |
          echo "job: proto-gen-rs was skipped since Nibiru Golang files were not changed."

      - name: "Set up Go"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: false # Repo go code is not used in this job.

      - name: "Install buf CLI"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: |
          go install github.com/bufbuild/buf/cmd/buf@latest

      - name: "Setup Node & npm (for npx)"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "lts/jod" # Node v20

      - name: "Generate Rust proto bindings"
        if: steps.check_nibiru_go.outputs.nibiru-go == 'true'
        run: |
          bash proto/buf.gen.rs.sh
