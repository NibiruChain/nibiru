name: Unit Tests

on:
  pull_request:
    paths: ["**.go", "**.proto", "go.mod", "go.sum", "**go.mod", "**go.sum", "contrib/docker/*"]

# Allow concurrent runs on main/release branches but isolates other branches
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
          cache: true

      # Use GitHub actions output paramters to get go paths. For more info, see
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - name: "Set output variables for go cache"
        id: go-cache-paths
        run: |
          echo "go-build-cache=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod-cache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      - name: "Go build cache"
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build-cache }}
          key: go-build-cache-${{ hashFiles('**/go.sum') }}

      - name: "Go mod cache"
        uses: actions/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod-cache }}
          key: go-mod-cache-${{ hashFiles('**/go.sum') }}

      - name: Run all unit tests.
        run: make test-unit

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: "Install just"
        # casey/just: https://just.systems/man/en/chapter_6.html
        # taiki-e/install-action: https://github.com/taiki-e/install-action
        uses: taiki-e/install-action@just

      - name: "Build the nibid binary"
        run: |
          just install

      - name: "Run scripts/chaosnet.sh (Used in Docker image)"
        run: |
          just test-chaosnet

      - name: "Run scripts/localnet.sh"
        run: |
          just test-localnet
