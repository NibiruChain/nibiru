name: Chaosnet Docker Image

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  chaosnet:
    runs-on: ubuntu-latest-m
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR container register
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache for Docker Build
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            go-build
            go-pkg
            nibiru-temp
          key: ${{ runner.os }}-chaosnet-build-cache-${{ hashFiles('go.sum') }}

      - name: Inject cache
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "go-build": "/root/.cache/go-build",
              "go-pkg": "/go/pkg",
              "nibiru-temp": "/nibiru/temp"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push chaosnet image
        uses: docker/build-push-action@v6
        with:
          file: contrib/docker/chaosnet.Dockerfile
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/nibiruchain/chaosnet:${{ startsWith(github.ref, 'refs/tags/v') && steps.get_version.outputs.version || 'latest' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max