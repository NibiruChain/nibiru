/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers"

import type { IOracle, IOracleInterface } from "../IOracle"

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "pair",
        type: "string",
      },
    ],
    name: "chainLinkLatestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "pair",
        type: "string",
      },
    ],
    name: "queryExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "blockTimeMs",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "blockHeight",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const

export class IOracle__factory {
  static readonly abi = _abi
  static createInterface(): IOracleInterface {
    return new Interface(_abi) as IOracleInterface
  }
  static connect(address: string, runner?: ContractRunner | null): IOracle {
    return new Contract(address, _abi, runner) as unknown as IOracle
  }
}
