/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers"

import type { ErisEvm, ErisEvmInterface } from "../ErisEvm"

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "liquidStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "bytes",
        name: "respJson",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stAmount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const

export class ErisEvm__factory {
  static readonly abi = _abi
  static createInterface(): ErisEvmInterface {
    return new Interface(_abi) as ErisEvmInterface
  }
  static connect(address: string, runner?: ContractRunner | null): ErisEvm {
    return new Contract(address, _abi, runner) as unknown as ErisEvm
  }
}
