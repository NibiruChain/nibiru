syntax = "proto3";
package nibiru.epochs.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "nibiru/epochs/v1/state.proto";

option go_package = "github.com/NibiruChain/nibiru/v2/x/epochs/types";

// Query defines the gRPC querier service.
service Query {
  // EpochInfos provide running epochInfos
  rpc EpochInfos(QueryEpochInfosRequest) returns (QueryEpochInfosResponse) {
    option (google.api.http).get = "/nibiru/epochs/v1beta1/epochs";
  }
  // CurrentEpoch provide current epoch of specified identifier
  rpc CurrentEpoch(QueryCurrentEpochRequest)
      returns (QueryCurrentEpochResponse) {
    option (google.api.http).get = "/nibiru/epochs/v1beta1/current_epoch";
  }
}

message QueryEpochInfosRequest {}
message QueryEpochInfosResponse {
  repeated nibiru.epochs.v1.EpochInfo epochs = 1
      [ (gogoproto.nullable) = false ];
}

message QueryCurrentEpochRequest { string identifier = 1; }
message QueryCurrentEpochResponse { uint64 current_epoch = 1; }
