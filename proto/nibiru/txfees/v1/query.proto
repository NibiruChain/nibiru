syntax = "proto3";
package nibiru.txfees.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";

import "nibiru/txfees/v1/feetoken.proto";

option go_package = "github.com/NibiruChain/nibiru/v2/x/txfees/types";

service Query {
  // FeeTokens returns a list of all the whitelisted fee tokens and their
  // corresponding pools. It does not include the BaseDenom, which has its own
  // query endpoint
  rpc FeeTokens(QueryFeeTokensRequest) returns (QueryFeeTokensResponse) {
    option (google.api.http).get = "/nibiru/txfees/v1/fee_tokens";
  }

  // Returns a list of all base denom tokens and their corresponding pools.
  rpc BaseDenom(QueryBaseDenomRequest) returns (QueryBaseDenomResponse) {
    option (google.api.http).get = "/nibiru/txfees/v1/base_denom";
  }
}

message QueryFeeTokensRequest {}
message QueryFeeTokensResponse {
  repeated FeeToken fee_tokens = 1 [
    (gogoproto.moretags) = "yaml:\"fee_tokens\"",
    (gogoproto.nullable) = false
  ];
}


message QueryBaseDenomRequest {}
message QueryBaseDenomResponse {
  string base_denom = 1 [ (gogoproto.moretags) = "yaml:\"base_denom\"" ];
}
